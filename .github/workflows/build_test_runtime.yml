# Copyright 2024 The IREE Authors
#
# Licensed under the Apache License v2.0 with LLVM Exceptions.
# See https://llvm.org/LICENSE.txt for license information.
# SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception

# This is designed to be called from ci.yml.

name: Build and test runtime

on:
  workflow_call:
    inputs:
      job_name:
        required: true
        type: string
      runs-on:
        required: true
        type: string # JSON encoded, see https://github.com/orgs/community/discussions/11692
      container:
        type: string
      job-enabled:
        type: boolean
        required: true

permissions:
  contents: read

jobs:
  build_test_runtime:
    name: "build_test_runtime :: ${{ inputs.job_name }}"
    runs-on: ${{ fromJson(inputs.runs_on) }}
    if: ${{ inputs.job-enabled }}
    defaults:
      run:
        shell: bash
    env:
      BUILD_DIR: build-runtime
      BUILD_PRESET: test
      CONTAINER: ${{ inputs.container }}
    steps:
      - name: "Checking out repository"
        uses: actions/checkout@v4.1.7

      - name: "(Windows) Configuring MSVC"
        if: contains(inputs.job_name, 'windows')
        uses: ilammy/msvc-dev-cmd@v1.13.0

      - name: "(macOS) Installing requirements"
        if: contains(inputs.job_name, 'macos')
        run: brew install ninja ccache coreutils bash

      - name: "Checking out runtime submodules"
        run: bash ./build_tools/scripts/git/update_runtime_submodules.sh

      # Windows/macOS (no Docker): install requirements -> build -> test.
      #
      # Note: Python is a mess across operating systems and GitHub runners so...
      #   * On Windows just install at the system level
      #   * On macOS install in a venv
      - name: "(Windows) Installing Python requirements"
        if: contains(inputs.job_name, 'windows')
        run: pip install -r ./runtime/bindings/python/iree/runtime/build_requirements.txt
      - name: "(Windows) Building runtime"
        if: contains(inputs.job_name, 'windows')
        run: bash ./build_tools/cmake/build_runtime.sh "${BUILD_DIR}"
      - name: "(macOS) Building runtime"
        if: contains(inputs.job_name, 'macos')
        env:
          IREE_BUILD_SETUP_PYTHON_VENV: build-runtime/.venv
        run: bash ./build_tools/cmake/build_runtime.sh "${BUILD_DIR}"
      - name: "Testing runtime"
        if: contains(inputs.job_name, 'windows') || contains(inputs.job_name, 'macos')
        run: bash ./build_tools/cmake/ctest_all.sh "${BUILD_DIR}"

      # With a Docker container: build under Docker -> test under Docker.
      - name: "(Docker) Building runtime"
        if: ${{ env.CONTAINER != '' }}
        run: |
          ./build_tools/github_actions/docker_run.sh \
            --env "BUILD_PRESET=test" \
            ${CONTAINER} \
            ./build_tools/cmake/build_runtime.sh \
            "${BUILD_DIR}"
      - name: "(Docker) Testing runtime"
        if: ${{ env.CONTAINER != '' }}
        run: |
          ./build_tools/github_actions/docker_run.sh \
            ${CONTAINER} \
            ./build_tools/cmake/ctest_all.sh \
            "${BUILD_DIR}"
